<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.ssafy.myhome.model.dao.AuthDao">
	
	<sql id="basicSelectUsersSQL">
		select a.user_id, a.user_name, a.user_nickname, a.user_phone,
		b.address, b.registration_number
		from user_info as a
		left outer join company_info as b
		on a.user_id = b.user_id
	</sql>
	
	<insert id="signUpUser" parameterType="UserInfo">
		insert into
		user_info(user_id, user_password, user_name, user_phone, user_nickname, user_role)
		values(#{userId}, #{userPassword}, #{userName}, #{userPhone}, #{userNickname}, #{userRole})
	</insert>
	
	<insert id="signUpCompany" parameterType="CompanyInfo">
		insert into 
		company_info(user_id, address, registration_number) 
		values(#{userId}, #{address}, #{registrationNumber});	
	</insert>
	
	<select id="logIn" parameterType="UserInfo" resultType="UserInfo">
		select user_id, user_password
		from user_info
		where user_id = #{userId} and user_password = #{userPassword}
	</select>
	
	<select id="validateDuplicateId" parameterType="String" resultType="int">
		select count(user_id) from user_info
		where user_id = #{userId}
	</select>
	
	<select id="validateDuplicateNickname" parameterType="String" resultType="int">
		select count(user_nickname) from user_info
		where user_nickname = #{userNickname}
	</select>
	
	
	<!-- 효인쌤 -->
	<select id="login" parameterType="UserInfo" resultMap="com.ssafy.resultmaps.UserResultMap">
		select user_nickname, user_id, user_name
		from user_info
		where user_id = #{userId} and user_password = #{userPassword}
	</select>
	
	<select id="userInfo" parameterType="string" resultMap="com.ssafy.resultmaps.UserResultMap">
		select user_nickname, user_id, user_name, user_phone, user_role
		from user_info
		where user_id = #{userId}
	</select>
	
	<select id="getRefreshToken" parameterType="string" resultType="string">
		select token
		from user_info
		where user_id = #{userId}
	</select>
	
	<update id="saveRefreshToken" parameterType="map">
		update user_info
		set token = #{token}
		where user_id = #{userId}
	</update>
	
	<update id="deleteRefreshToken" parameterType="map">
		update user_info
		set token = #{token, jdbcType=VARCHAR}
		where user_id = #{userId}
	</update>
	
</mapper>
